{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "clusterName": {
      "type": "string",
      "minLength": 3,
      "maxLength": 15,
      "metadata": {
        "description": "The HPC Pack cluster name. It must be unique in the location because it is also used as the public DNS name prefix for the cluster. For example, the public DNS name is '&lt;clustername&gt;.westus.cloudapp.azure.com' if the resource group location is 'West US'. It must contain between 3 and 15 characters with lowercase letters and numbers, and must start with a letter."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "North Europe",
      "metadata": {
        "description": "Location where the HPC Pack cluster will be created"
      }
    },
    "privateDomainName": {
      "type": "string",
      "defaultValue": "hpc.local",
      "metadata": {
        "description": "The fully qualified domain name (FQDN) for the private domain forest which will be created by this template, for example 'hpc.local'."
      }
    },
    "nbrCNPerStorageAccount": {
      "type": "int",
      "defaultValue": 20,
      "metadata": {
        "description": "The maximum number of compute nodes in one storage account."
      }
    },
    "storageAccountStartIndex": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "The start index of the new storage accounts to be created."
      }
    },
    "headNodeVMSize": {
      "type": "string",
      "defaultValue": "Standard_A8",
      "allowedValues": [
        "Standard_A3",
        "Standard_A4",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A9",
        "Standard_A10",
        "Standard_A11",
        "Standard_D3",
        "Standard_D3_v2",
        "Standard_D4",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_D12",
        "Standard_D12_v2",
        "Standard_D13",
        "Standard_D13_v2",
        "Standard_D14",
        "Standard_D14_v2",
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS12",
        "Standard_DS13",
        "Standard_DS14",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5"
      ],
      "metadata": {
        "description": "The VM size for the head node"
      }
    },
    "computeNodeImage": {
      "type": "string",
      "defaultValue": "CentOS_7.1",
      "allowedValues": [
        "CentOS_6.6",
        "CentOS_7.1",
        "SLES_12",
        "SLES_Premium_12",
        "SLES_HPC_12",
        "SLES_HPC_Premium_12",
        "Ubuntu_14.04"
      ],
      "metadata": {
        "description": "The VM image of the compute nodes"
      }
    },
    "computeNodeImagePublisher": {
      "type": "string",
      "defaultValue": "OpenLogic",
      "metadata": {
        "description": "The VM image publisher for the compute nodes"
      }
    },
    "computeNodeNamePrefix": {
      "type": "string",
      "defaultValue": "IaaSLnxCN-",
      "minLength": 1,
      "maxLength": 12,
      "metadata": {
        "description": "The name prefix of the compute nodes. It must be no more than 12 characters, begin with a letter, and contain only letters, numbers and hyphens. For example, if 'IaaSCN-' is specified, the compute node names will be 'IaaSCN-000', 'IaaSCN-001', ..."
      }
    },
    "computeNodeNumber": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "The number of the compute nodes"
      }
    },
    "computeNodeVMSize": {
      "type": "string",
      "defaultValue": "Standard_A8",
      "allowedValues": [
        "Standard_A2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A9",
        "Standard_A10",
        "Standard_A11",
        "Standard_D2",
        "Standard_D2_v2",
        "Standard_D3",
        "Standard_D3_v2",
        "Standard_D4",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_D11",
        "Standard_D11_v2",
        "Standard_D12",
        "Standard_D12_v2",
        "Standard_D13",
        "Standard_D13_v2",
        "Standard_D14",
        "Standard_D14_v2",
        "Standard_DS2",
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS11",
        "Standard_DS12",
        "Standard_DS13",
        "Standard_DS14",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5"
      ],
      "metadata": {
        "description": "The VM role size of the compute nodes"
      }
    },
    "computeNodeImageOffer": {
      "type": "string",
      "defaultValue": "CentOS-HPC",
      "metadata": {
        "description": "The VM image offer for the compute nodes"
      }
    },
    "computeNodeImageSku": {
      "type": "string",
      "defaultValue": "7.1",
      "metadata": {
        "description": "The VM image sku for the compute nodes"
      }
    },
    "publicIPName": {
      "type": "string",
      "defaultValue": "[concat(parameters('clusterName'), '-PublicIP-HN')]",
      "metadata": {
        "description": "The name of the public IP address"
      }
    },
    "publicIPRGName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "Resource group for the public IP address resource"
      }
    },
    "publicIPNewOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Indicates whether the public IP address is new or existing"
      }
    },
    "publicIPDNSNameLabel": {
      "type": "string",
      "defaultValue": "[parameters('clusterName')]",
      "metadata": {
        "description": "The DNS name label of the public IP address"
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "user01",
      "metadata": {
        "description": "Administrator user name for the virtual machines and the Active Directory domain."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Administrator password for the virtual machines and the Active Directory domain"
      }
    },
    "headNodePostConfigScript": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional URL of a public available PowerShell script you want to run on the head node after it is configured. The script will be run as the Local System account. You can also specify arguments for the script, for example 'http://www.contoso.com/myhnpostscript.ps1 -Arg1 arg1 -Arg2 arg2'."
      }
    },
    "computeNodePostConfigScript": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional URL of a public available PowerShell script you want to run on the compute nodes after they are configured. The script will be run as the Local System account. You can also specify arguments for the script, for example 'http://www.contoso.com/mycnpostscript.ps1 -Arg1 arg1 -Arg2 arg2'."
      }
    },
    "artifactsBaseUrl": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/JuanJoseGarciaUCLM/AzureHPC/master/azure-quickstart-templates/create-hpc-cluster-linux-hn-cn-71-rdma/jsons",
      "metadata": {
        "description": "Base URL for Marketplace",
        "artifactsBaseUrl": "https://raw.githubusercontent.com/JuanJoseGarciaUCLM/AzureHPC/master/azure-quickstart-templates/create-hpc-cluster-linux-hn-cn-71-rdma/jsons"
      }
    }
  },
  "variables": {
    "apiVersion": "2015-06-15",
    "virtualNetworkName": "[concat(parameters('clusterName'), 'VNet')]",
    "storageAccountNamePrefix": "[toLower(concat('hpc', uniqueString(resourceGroup().id, toLower(parameters('clusterName')))))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat(parameters('clusterName'), '-PublicIP-HN')]",
    "computeNodeImageOsPlatform": "Linux",
    "computeNodeImages": {
      "CentOS_6.6": {
        "publisher": "OpenLogic",
        "offer": "CentOS",
        "sku": "6.6"
      },
      "CentOS_7.1": {
        "publisher": "OpenLogic",
        "offer": "CentOS-HPC",
        "sku": "7.1"
      },
      "SLES_12": {
        "publisher": "SUSE",
        "offer": "SLES",
        "sku": "12"
      },
      "SLES_Premium_12": {
        "publisher": "SUSE",
        "offer": "SLES-Priority",
        "sku": "12"
      },
      "SLES_HPC_12": {
        "publisher": "SUSE",
        "offer": "SLES-HPC",
        "sku": "12"
      },
      "SLES_HPC_Premium_12": {
        "publisher": "SUSE",
        "offer": "SLES-HPC-Priority",
        "sku": "12"
      },
      "Ubuntu_14.04": {
        "publisher": "Canonical",
        "offer": "UbuntuServer",
        "sku": "14.04.3-LTS"
      }
    },
    "currentComputeNodeImage": "[variables('computeNodeImages')[parameters('computeNodeImage')]]",



    "computeNodeNumber": "[int(parameters('computeNodeNumber'))]",
    "cnStorageAccountNumber": "[add(div(sub(variables('computeNodeNumber'), 1), parameters('nbrCNPerStorageAccount')), 1)]",
    "cnStorageAccountStartIndex": "[add(parameters('storageAccountStartIndex'), 1)]",
    "storageAccountIndexWidth": "[length(string(sub(add(variables('cnStorageAccountNumber'), variables('cnStorageAccountStartIndex')), 1)))]",
    "hnStorageAccountName": "[concat(variables('storageAccountNamePrefix'), padLeft(string(parameters('storageAccountStartIndex')), variables('storageAccountIndexWidth'), '0'))]",



    "addressPrefix": "10.0.0.0/16",
    "subnet1Name": "Subnet-1",
    "subnet1Prefix": "10.0.0.0/22",


    "publicIPNewOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Indicates whether the public IP address is new or existing"
      }
    },

    "publicIPAddressType": "Dynamic",


    "domainNameLabel": {
      "value": "[parameters('publicIPDNSNameLabel')]"
    },



    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnet1Name'))]",
    "nicNameSuffix": "[concat('-nic', uniqueString(variables('subnetRef')))]",
    "nicNameHN": "[concat(parameters('clusterName'), variables('nicNameSuffix'))]",
    "nicName": "[concat(parameters('clusterName'),'-nic')]",


    "availabilitySetNamePrefix": "[concat(parameters('clusterName'), '-avset')]",
    "nbrVMPerAvailabilitySet": 50,
    "availabilitySetNumber": "[add(div(variables('computeNodeNumber'), variables('nbrVMPerAvailabilitySet')), 1)]",






    "cnOsPlatformRelated": {
      "Linux": {
        "template": "linuxnode.json"
      }
    },
    "curCNOSPlatformRelated": "[variables('cnOsPlatformRelated')[variables('computeNodeImageOsPlatform')]]",
    "computeNodeTemplateUrl": "[concat(parameters('artifactsBaseUrl'), '/', variables('curCNOSPlatformRelated').template)]",

    "computeNodeCustomData": "[base64(concat('HPCClusterName=', parameters('clusterName'), '\r\nImageCategory=public\r\nImageName=', parameters('computeNodeImageOffer'), '-', parameters('computeNodeImageSku'), '\r\nVMSize=', parameters('computeNodeVMSize')))]",
    "templateBaseUrlScript": "https://raw.githubusercontent.com/JuanJoseGarciaUCLM/AzureHPC/master/azure-quickstart-templates/create-hpc-cluster-linux-hn-cn-71-rdma/Scripts",
    "osSettings": {
      "scripts": [
        "[concat(variables('templateBaseUrlScript'), '/scriptHead.sh')]"
      ]
    }





  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('hnStorageAccountName')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[parameters('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet1Prefix')]"
            }
          }
        ]
      }
    },
    {
      "name": "setupClusterPublicIP",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('artifactsBaseUrl'), '/publicip-', parameters('publicIPNewOrExisting'), '.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "apiVersion": {
            "value": "[variables('apiVersion')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "publicIPAddressName": {
            "value": "[parameters('publicIPName')]"
          },
          "publicIPAddressType": {
            "value": "[variables('publicIPAddressType')]"
          },
          "domainNameLabel": {
            "value": "[parameters('publicIPDNSNameLabel')]"
          },
          "publicIPRGName": {
            "value": "[parameters('publicIpRGName')]"
          }
        }
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicNameHN')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "Microsoft.Resources/deployments/setupClusterPublicIP"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "IPConfig",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "10.0.0.4",
              "publicIPAddress": {
                "id": "[reference('setupClusterPublicIP').outputs.resourceId.value]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-01-01",
      "type": "Microsoft.Resources/deployments",
      "name": "createAvailabilitySets",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('artifactsBaseUrl'), '/availabilitySets.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "apiVersion": {
            "value": "[variables('apiVersion')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "availabilitySetNamePrefix": {
            "value": "[variables('availabilitySetNamePrefix')]"
          },
          "availabilitySetNumber": {
            "value": "[variables('availabilitySetNumber')]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-01-01",
      "type": "Microsoft.Resources/deployments",
      "name": "createHeadNode",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicNameHN'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('hnStorageAccountName'))]",
        "Microsoft.Resources/deployments/createAvailabilitySets"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('artifactsBaseUrl'), '/headnode-rdma-enabled.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "apiVersion": {
            "value": "[variables('apiVersion')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "vmName": {
            "value": "[parameters('clusterName')]"
          },
          "vmSize": {
            "value": "[parameters('headNodeVMSize')]"
          },
          "storageAccountName": {
            "value": "[variables('hnStorageAccountName')]"
          },
          "nicName": {
            "value": "[variables('nicNameHN')]"
          },
          "imgPublisher": {
            "value": "[parameters('computeNodeImagePublisher')]"
          },
          "imgOffer": {
            "value": "[parameters('computeNodeImageOffer')]"
          },
          "imgSku": {
            "value": "[parameters('computeNodeImageSku')]"
          },
          "imgVersion": {
            "value": "latest"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "availabilitySetName": {
            "value": "[concat(variables('availabilitySetNamePrefix'), '000')]"
          },
          "customData": {
            "value": "[variables('computeNodeCustomData')]"
          },
          "scriptBaseUri": {
            "value": "[parameters('artifactsBaseUrl')]"
          },
          "privateDomainName": {
            "value": "[parameters('privateDomainName')]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-01-01",
      "type": "Microsoft.Resources/deployments",
      "name": "updateVNetDNS",
      "dependsOn": [
        "Microsoft.Resources/deployments/createHeadNode"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('artifactsBaseUrl'),'/vnet-with-dns-server.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "apiVersion": {
            "value": "[variables('apiVersion')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[variables('addressPrefix')]"
          },
          "subnetName": {
            "value": "[variables('subnet1Name')]"
          },
          "subnetRange": {
            "value": "[variables('subnet1Prefix')]"
          },
          "DNSServerAddress": {
            "value": [
              "10.0.0.4",
              "8.8.8.8"
            ]
          }
        }
      }
    },
    {

      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('clusterName'),'/configureHeadNode')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "Microsoft.Resources/deployments/updateVNetDNS"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.2",
        "settings": {
          "fileUris": "[variables('osSettings').scripts]",
          "commandToExecute": "[concat('bash scriptHead.sh ',parameters('computeNodeNumber'),' ',parameters('computeNodeNamePrefix'),' ',parameters('adminUsername'))]"
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[concat(variables('storageAccountNamePrefix'), padLeft(string(copyIndex(variables('cnStorageAccountStartIndex'))), variables('storageAccountIndexWidth'), '0'))]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[parameters('location')]",
      "tags": { },
      "dependsOn": [
        "Microsoft.Resources/deployments/createHeadNode"
      ],
      "copy": {
        "name": "hpcStorageAccounts",
        "count": "[variables('cnStorageAccountNumber')]"
      },
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-01-01",
      "type": "Microsoft.Resources/deployments",
      "name": "[concat('create', parameters('computeNodeNamePrefix'), padLeft(string(copyIndex()), 3, '0'))]",
      "dependsOn": [
        "Microsoft.Resources/deployments/createAvailabilitySets",
        "Microsoft.Resources/deployments/updateVNetDNS",
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountNamePrefix'), padLeft(string(add(div(copyIndex(), parameters('nbrCNPerStorageAccount')), variables('cnStorageAccountStartIndex'))), variables('storageAccountIndexWidth'), '0'))]"
      ],
      "copy": {
        "name": "CN",
        "count": "[variables('computeNodeNumber')]"
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('computeNodeTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "apiVersion": {
            "value": "[variables('apiVersion')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "nicName": {
            "value": "[concat(variables('nicName'), padLeft(string(copyIndex()), 3, '0'))]"
          },
          "subnetId": {
            "value": "[variables('subnetRef')]"
          },
          "vmName": {
            "value": "[concat(parameters('computeNodeNamePrefix'), padLeft(string(copyIndex()), 3, '0'))]"
          },
          "vmNumber": {
            "value": "[string(add(copyIndex(),5))]"
          },
          "vmSize": {
            "value": "[parameters('computeNodeVMSize')]"
          },
          "storageAccountName": {
            "value": "[concat(variables('storageAccountNamePrefix'), padLeft(string(add(div(copyIndex(), parameters('nbrCNPerStorageAccount')), variables('cnStorageAccountStartIndex'))), variables('storageAccountIndexWidth'), '0'))]"
          },
          "imgPublisher": {
            "value": "[parameters('computeNodeImagePublisher')]"
          },
          "imgOffer": {
            "value": "[parameters('computeNodeImageOffer')]"
          },
          "imgSku": {
            "value": "[parameters('computeNodeImageSku')]"
          },
          "imgVersion": {
            "value": "latest"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "availabilitySetName": {
            "value": "[concat(variables('availabilitySetNamePrefix'), padLeft(string(div(add(copyIndex(), 1), variables('nbrVMPerAvailabilitySet'))), 3, '0'))]"
          },
          "customData": {
            "value": "[variables('computeNodeCustomData')]"
          },
          "scriptBaseUri": {
            "value": "[parameters('artifactsBaseUrl')]"
          },
          "clusterName": {
            "value": "[parameters('clusterName')]"
          },
          "privateDomainName": {
            "value": "[parameters('privateDomainName')]"
          },
          "tagname": {
            "value": "[parameters('clusterName')]"
          }
        }
      }
    }
  ],
    "outputs": {
      "clusterDNSName": {
        "type": "string",
        "value": "[reference('setupClusterPublicIP').outputs.fqdn.value]"
      }
    }
  }